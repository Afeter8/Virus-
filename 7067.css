<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SISTEMA DEFENSA INTEGRAL IA - FERNANDO GUADALUPE MÉNDEZ ESPINOZA</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        :root {
            --primary: #00ff41;
            --secondary: #0088ff;
            --danger: #ff0044;
            --warning: #ffff00;
            --dark: #0f0f23;
            --darker: #0a0a1a;
        }
        
        body {
            background: linear-gradient(135deg, var(--darker) 0%, var(--dark) 50%, #16213e 100%);
            color: var(--primary);
            font-family: 'Courier New', monospace;
            min-height: 100vh;
            overflow-x: hidden;
            position: relative;
        }
        
        .matrix-bg {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            opacity: 0.1;
        }
        
        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .header {
            text-align: center;
            padding: 30px 0;
            border-bottom: 2px solid var(--primary);
            margin-bottom: 30px;
            position: relative;
        }
        
        .header h1 {
            font-size: 2.8rem;
            text-shadow: 0 0 15px var(--primary);
            margin-bottom: 10px;
            background: linear-gradient(90deg, var(--primary), var(--secondary));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }
        
        .project-badge {
            display: inline-block;
            background: var(--danger);
            color: white;
            padding: 5px 15px;
            border-radius: 20px;
            margin: 10px 5px;
            font-size: 0.9rem;
            animation: glow 2s infinite;
        }
        
        @keyframes glow {
            0%, 100% { box-shadow: 0 0 5px var(--danger); }
            50% { box-shadow: 0 0 20px var(--danger); }
        }
        
        .dashboard {
            display: grid;
            grid-template-columns: 1fr 300px;
            gap: 20px;
            margin: 20px 0;
        }
        
        .main-panel {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
        }
        
        .sidebar {
            background: rgba(10, 10, 26, 0.8);
            border: 1px solid var(--secondary);
            border-radius: 10px;
            padding: 20px;
        }
        
        .status-bar {
            background: rgba(0, 0, 0, 0.8);
            border: 1px solid var(--primary);
            padding: 20px;
            margin: 20px 0;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0, 255, 65, 0.3);
        }
        
        .status-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-top: 15px;
        }
        
        .status-item {
            background: rgba(0, 20, 0, 0.3);
            padding: 15px;
            border-radius: 8px;
            border-left: 4px solid var(--primary);
        }
        
        .status-value {
            color: var(--primary);
            font-weight: bold;
            font-size: 1.1rem;
        }
        
        .defense-module {
            background: rgba(0, 0, 0, 0.7);
            border: 1px solid var(--primary);
            border-radius: 10px;
            padding: 20px;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }
        
        .defense-module::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(0, 255, 65, 0.1), transparent);
            transition: left 0.5s;
        }
        
        .defense-module:hover::before {
            left: 100%;
        }
        
        .defense-module:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 255, 65, 0.4);
        }
        
        .module-header {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid var(--primary);
            padding-bottom: 10px;
        }
        
        .module-icon {
            width: 40px;
            height: 40px;
            background: var(--primary);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 15px;
            color: #000;
            font-weight: bold;
        }
        
        .module-content {
            line-height: 1.6;
        }
        
        .protocol-active {
            color: var(--primary);
            animation: pulse 2s infinite;
        }
        
        .protocol-warning {
            color: var(--warning);
            animation: pulse 1s infinite;
        }
        
        .protocol-danger {
            color: var(--danger);
            animation: pulse 0.5s infinite;
        }
        
        .threat-level {
            height: 15px;
            background: linear-gradient(90deg, var(--primary), var(--warning), var(--danger));
            border-radius: 8px;
            margin-top: 10px;
            position: relative;
            overflow: hidden;
        }
        
        .threat-indicator {
            position: absolute;
            width: 20px;
            height: 20px;
            background: #fff;
            border-radius: 50%;
            top: -2.5px;
            transition: left 1s ease;
            box-shadow: 0 0 10px #fff;
        }
        
        .log-container {
            background: rgba(0, 0, 0, 0.8);
            border: 1px solid var(--primary);
            border-radius: 10px;
            padding: 20px;
            margin-top: 30px;
            max-height: 400px;
            overflow-y: auto;
        }
        
        .log-entry {
            padding: 8px 0;
            border-bottom: 1px solid rgba(0, 255, 65, 0.2);
            font-size: 0.9rem;
            display: flex;
            align-items: center;
        }
        
        .log-icon {
            width: 20px;
            height: 20px;
            border-radius: 50%;
            margin-right: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.7rem;
            font-weight: bold;
        }
        
        .icon-info { background: var(--secondary); color: white; }
        .icon-warning { background: var(--warning); color: black; }
        .icon-danger { background: var(--danger); color: white; }
        .icon-success { background: var(--primary); color: black; }
        
        .timestamp {
            color: var(--secondary);
            margin-right: 10px;
            min-width: 80px;
        }
        
        .counter-measures {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-top: 20px;
        }
        
        .counter-card {
            background: rgba(255, 0, 68, 0.1);
            border: 1px solid var(--danger);
            border-radius: 8px;
            padding: 15px;
            text-align: center;
        }
        
        .counter-card.active {
            background: rgba(0, 255, 65, 0.1);
            border-color: var(--primary);
        }
        
        .quantum-shield {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 9999;
            opacity: 0;
            transition: opacity 0.3s;
        }
        
        .shield-active {
            opacity: 0.3;
            background: radial-gradient(circle, transparent 30%, rgba(0, 255, 65, 0.1) 70%);
            animation: shieldPulse 3s infinite;
        }
        
        @keyframes shieldPulse {
            0%, 100% { opacity: 0.1; }
            50% { opacity: 0.3; }
        }
        
        .footer {
            text-align: center;
            margin-top: 40px;
            padding: 20px;
            border-top: 1px solid var(--primary);
            font-size: 0.8rem;
            color: var(--secondary);
        }
        
        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.7; }
            100% { opacity: 1; }
        }
        
        .cyber-border {
            position: relative;
            padding: 3px;
            background: linear-gradient(90deg, var(--primary), var(--secondary), var(--danger), var(--primary));
            background-size: 400% 400%;
            animation: gradientShift 3s ease infinite;
            border-radius: 10px;
        }
        
        @keyframes gradientShift {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }
        
        .cyber-border > div {
            background: var(--darker);
            border-radius: 8px;
            padding: 20px;
        }
        
        .project-list {
            list-style: none;
            margin-top: 15px;
        }
        
        .project-list li {
            padding: 8px;
            margin: 5px 0;
            background: rgba(0, 255, 65, 0.1);
            border-radius: 5px;
            border-left: 3px solid var(--primary);
        }
    </style>
</head>
<body>
    <canvas class="matrix-bg" id="matrixCanvas"></canvas>
    <div class="quantum-shield" id="quantumShield"></div>
    
    <div class="container">
        <div class="header">
            <h1>⚡ SISTEMA DEFENSA INTEGRAL IA ⚡</h1>
            <p>PROTECCIÓN TOTAL PARA PROYECTOS DE FERNANDO GUADALUPE MÉNDEZ ESPINOZA</p>
            <div>
                <span class="project-badge">ChatGPT</span>
                <span class="project-badge">OpenAI</span>
                <span class="project-badge">DeepSeek</span>
                <span class="project-badge">IA Development</span>
                <span class="project-badge">Code Protection</span>
            </div>
        </div>
        
        <div class="cyber-border">
            <div class="status-bar">
                <h2>🔰 ESTADO GENERAL DEL SISTEMA</h2>
                <div class="status-grid">
                    <div class="status-item">
                        <span>Protocolo Principal:</span>
                        <div class="status-value protocol-active" id="mainProtocol">ACTIVO</div>
                    </div>
                    <div class="status-item">
                        <span>Ciclo de Ejecución:</span>
                        <div class="status-value" id="executionCycle">0</div>
                    </div>
                    <div class="status-item">
                        <span>Nivel de Amenaza:</span>
                        <div class="status-value" id="threatLevel">BAJO</div>
                    </div>
                    <div class="status-item">
                        <span>Escudo Cuántico:</span>
                        <div class="status-value protocol-active" id="quantumStatus">ACTIVO</div>
                    </div>
                </div>
                <div class="threat-level">
                    <div class="threat-indicator" id="threatIndicator"></div>
                </div>
                <div class="status-item">
                    <span>Última Actualización:</span>
                    <span class="status-value" id="lastUpdate">--:--:--</span>
                </div>
            </div>
        </div>
        
        <div class="dashboard">
            <div class="main-panel">
                <div class="defense-module">
                    <div class="module-header">
                        <div class="module-icon">🛡️</div>
                        <h3>DEFENSA ANTI-INTRUSIÓN</h3>
                    </div>
                    <div class="module-content">
                        <p>Sistema avanzado de detección y prevención de intrusiones.</p>
                        <p>Estado: <span class="protocol-active" id="intrusionStatus">ACTIVO</span></p>
                        <div class="counter-measures">
                            <div class="counter-card active" id="firewallCard">Firewall</div>
                            <div class="counter-card active" id="ipsCard">IPS</div>
                            <div class="counter-card active" id="wafCard">WAF</div>
                        </div>
                    </div>
                </div>
                
                <div class="defense-module">
                    <div class="module-header">
                        <div class="module-icon">🔍</div>
                        <h3>MONITOREO DE CÓDIGO</h3>
                    </div>
                    <div class="module-content">
                        <p>Protección integral de código fuente y modelos de IA.</p>
                        <p>Estado: <span class="protocol-active" id="codeStatus">ACTIVO</span></p>
                        <ul class="project-list">
                            <li>ChatGPT - Protegido ✓</li>
                            <li>OpenAI - Protegido ✓</li>
                            <li>DeepSeek - Protegido ✓</li>
                            <li>Modelos IA - Protegidos ✓</li>
                        </ul>
                    </div>
                </div>
                
                <div class="defense-module">
                    <div class="module-header">
                        <div class="module-icon">⚡</div>
                        <h3>SISTEMA OFENSIVO</h3>
                    </div>
                    <div class="module-content">
                        <p>Contramedidas activas y respuesta automatizada.</p>
                        <p>Estado: <span class="protocol-active" id="offensiveStatus">ACTIVO</span></p>
                        <div class="counter-measures">
                            <div class="counter-card" id="honeypotCard">Honeypot</div>
                            <div class="counter-card" id="counterCard">Contraataque</div>
                            <div class="counter-card" id="traceCard">Rastreo</div>
                        </div>
                    </div>
                </div>
                
                <div class="defense-module">
                    <div class="module-header">
                        <div class="module-icon">🔒</div>
                        <h3>ENCRYPTACIÓN CUÁNTICA</h3>
                    </div>
                    <div class="module-content">
                        <p>Protección criptográfica de última generación.</p>
                        <p>Estado: <span class="protocol-active" id="cryptoStatus">ACTIVO</span></p>
                        <div class="counter-measures">
                            <div class="counter-card active" id="aesCard">AES-512</div>
                            <div class="counter-card active" id="quantumCard">Quantum Key</div>
                            <div class="counter-card active" id="blockchainCard">Blockchain</div>
                        </div>
                    </div>
                </div>
                
                <div class="defense-module">
                    <div class="module-header">
                        <div class="module-icon">🌐</div>
                        <h3>PROTECCIÓN WEB</h3>
                    </div>
                    <div class="module-content">
                        <p>Defensas avanzadas contra amenazas web.</p>
                        <p>Estado: <span class="protocol-active" id="webStatus">ACTIVO</span></p>
                        <div class="counter-measures">
                            <div class="counter-card active" id="antiFrameCard">Anti-Iframe</div>
                            <div class="counter-card active" id="xssCard">Anti-XSS</div>
                            <div class="counter-card active" id="csrfCard">Anti-CSRF</div>
                        </div>
                    </div>
                </div>
                
                <div class="defense-module">
                    <div class="module-header">
                        <div class="module-icon">🔄</div>
                        <h3>REDUNDANCIA Y BACKUP</h3>
                    </div>
                    <div class="module-content">
                        <p>Sistemas de respaldo y recuperación automática.</p>
                        <p>Estado: <span class="protocol-active" id="backupStatus">ACTIVO</span></p>
                        <ul class="project-list">
                            <li>Backup Automático - Activo ✓</li>
                            <li>Replicación en Tiempo Real - Activo ✓</li>
                            <li>Recuperación de Desastres - Listo ✓</li>
                        </ul>
                    </div>
                </div>
            </div>
            
            <div class="sidebar">
                <h3>🔍 ACTIVIDAD EN TIEMPO REAL</h3>
                <div class="status-item">
                    <span>Intentos de Acceso:</span>
                    <div class="status-value" id="accessAttempts">0</div>
                </div>
                <div class="status-item">
                    <span>Amenazas Neutralizadas:</span>
                    <div class="status-value" id="threatsNeutralized">0</div>
                </div>
                <div class="status-item">
                    <span>Proyectos Protegidos:</span>
                    <div class="status-value" id="projectsProtected">5</div>
                </div>
                <div class="status-item">
                    <span>Uptime del Sistema:</span>
                    <div class="status-value" id="systemUptime">100%</div>
                </div>
                
                <h3 style="margin-top: 20px;">🎯 OBJETIVOS PRINCIPALES</h3>
                <ul class="project-list">
                    <li>Proteger propiedad intelectual</li>
                    <li>Prevenir robo de código</li>
                    <li>Defender modelos de IA</li>
                    <li>Garantizar continuidad</li>
                    <li>Proteger datos sensibles</li>
                </ul>
            </div>
        </div>
        
        <div class="log-container">
            <h3>📊 REGISTRO DEL SISTEMA - ACTIVIDAD EN TIEMPO REAL</h3>
            <div id="systemLog"></div>
        </div>
        
        <div class="footer">
            SISTEMA DE DEFENSA INTEGRAL IA | FERNANDO GUADALUPE MÉNDEZ ESPINOZA | PROTOCOLO INMUTABLE ACTIVO
            <br>PROTECCIÓN TOTAL PARA CHATGPT, OPENAI, DEEPSEEK Y DESARROLLOS DE INTELIGENCIA ARTIFICIAL
        </div>
    </div>

    <script>
        // Sistema de Matriz de fondo mejorado
        const canvas = document.getElementById('matrixCanvas');
        const ctx = canvas.getContext('2d');
        
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
        
        const chars = "01010101010101010101010101010101010101010101010101010101010101010101010101010101";
        const charArray = chars.split('');
        const fontSize = 16;
        const columns = canvas.width / fontSize;
        const drops = [];
        
        for(let i = 0; i < columns; i++) {
            drops[i] = Math.floor(Math.random() * canvas.height / fontSize);
        }
        
        function drawMatrix() {
            ctx.fillStyle = 'rgba(10, 10, 26, 0.05)';
            ctx.fillRect(0, 0, canvas.width, canvas.height);
            
            ctx.fillStyle = '#00ff41';
            ctx.font = `bold ${fontSize}px 'Courier New', monospace`;
            
            for(let i = 0; i < drops.length; i++) {
                const text = charArray[Math.floor(Math.random() * charArray.length)];
                const opacity = Math.random() * 0.5 + 0.5;
                ctx.globalAlpha = opacity;
                ctx.fillText(text, i * fontSize, drops[i] * fontSize);
                
                if(drops[i] * fontSize > canvas.height && Math.random() > 0.975) {
                    drops[i] = 0;
                }
                
                drops[i]++;
            }
            ctx.globalAlpha = 1;
        }
        
        // Sistema de Defensa Integral Mejorado
        class IntegralDefenseSystem {
            constructor() {
                this.cycleCount = 0;
                this.threatLevel = 1;
                this.isRunning = true;
                this.logEntries = [];
                this.accessAttempts = 0;
                this.threatsNeutralized = 0;
                this.quantumShieldActive = true;
                
                this.protocols = {
                    intrusion: true,
                    codeProtection: true,
                    offensive: true,
                    crypto: true,
                    webProtection: true,
                    backup: true
                };
                
                this.projects = [
                    "ChatGPT", "OpenAI", "DeepSeek", "IA Models", "Code Repository"
                ];
                
                this.init();
            }
            
            init() {
                this.addLog("🚀 SISTEMA DE DEFENSA INTEGRAL INICIADO", "success");
                this.addLog("🛡️ Protección activada para Fernando Guadalupe Méndez Espinoza", "info");
                this.addLog("🔒 Todos los proyectos de IA están bajo protección", "info");
                
                this.startMainLoop();
                this.startIntrusionDetection();
                this.startCodeProtection();
                this.startOffensiveSystems();
                this.startCryptographicProtection();
                this.startWebProtection();
                this.startBackupSystems();
                this.startThreatSimulation();
                this.startQuantumShield();
                
                setInterval(() => {
                    this.updateDisplay();
                }, 100);
            }
            
            startMainLoop() {
                setInterval(() => {
                    this.cycleCount++;
                    document.getElementById('executionCycle').textContent = this.cycleCount;
                    
                    if (this.cycleCount % 10 === 0) {
                        this.addLog(`🔄 Ciclo de ejecución ${this.cycleCount} completado`, "info");
                    }
                    
                    // Verificación de protocolos cada 5 ciclos
                    if (this.cycleCount % 5 === 0) {
                        this.verifyAllProtocols();
                    }
                    
                    // Ajuste automático de nivel de amenaza
                    if (this.cycleCount % 15 === 0) {
                        this.adjustThreatLevel();
                    }
                    
                    // Actualizar uptime
                    this.updateUptime();
                    
                }, 1000);
            }
            
            startIntrusionDetection() {
                setInterval(() => {
                    this.simulateIntrusionAttempt();
                }, 3000);
                
                setInterval(() => {
                    this.addLog("🔍 Escaneo de intrusiones completado - Sistema seguro", "info");
                }, 15000);
            }
            
            startCodeProtection() {
                setInterval(() => {
                    this.protectCodeBase();
                }, 5000);
            }
            
            startOffensiveSystems() {
                setInterval(() => {
                    this.activateCounterMeasures();
                }, 8000);
            }
            
            startCryptographicProtection() {
                setInterval(() => {
                    this.addLog("🔐 Cifrado cuántico activo - Comunicaciones seguras", "success");
                }, 20000);
            }
            
            startWebProtection() {
                // Protección anti-iframe
                if (window.top !== window.self) {
                    window.top.location = window.self.location;
                    this.addLog("🛡️ Intento de iframe detectado y neutralizado", "warning");
                }
                
                setInterval(() => {
                    if (window.top !== window.self) {
                        window.top.location = window.self.location;
                        this.addLog("🛡️ Protección anti-iframe activada", "warning");
                    }
                }, 5000);
                
                setInterval(() => {
                    this.addLog("🌐 Protecciones web activas - XSS/CSRF prevenidos", "info");
                }, 25000);
            }
            
            startBackupSystems() {
                setInterval(() => {
                    this.addLog("💾 Sistema de backup automático ejecutado", "info");
                }, 30000);
            }
            
            startThreatSimulation() {
                setInterval(() => {
                    this.simulateAdvancedThreat();
                }, 10000);
            }
            
            startQuantumShield() {
                const shield = document.getElementById('quantumShield');
                setInterval(() => {
                    shield.classList.toggle('shield-active');
                }, 3000);
            }
            
            simulateIntrusionAttempt() {
                const attempts = Math.floor(Math.random() * 3);
                for (let i = 0; i < attempts; i++) {
                    this.accessAttempts++;
                    document.getElementById('accessAttempts').textContent = this.accessAttempts;
                    
                    const attackTypes = [
                        "Fuerza bruta", "Inyección SQL", "XSS", "CSRF", "DDoS", "Zero-day"
                    ];
                    const attackType = attackTypes[Math.floor(Math.random() * attackTypes.length)];
                    
                    this.addLog(`🚫 Intento de ${attackType} detectado y bloqueado`, "warning");
                    
                    if (Math.random() > 0.7) {
                        this.threatsNeutralized++;
                        document.getElementById('threatsNeutralized').textContent = this.threatsNeutralized;
                        this.addLog(`✅ Amenaza ${attackType} neutralizada exitosamente`, "success");
                    }
                }
            }
            
            protectCodeBase() {
                const projects = this.projects;
                const randomProject = projects[Math.floor(Math.random() * projects.length)];
                
                const protections = [
                    "cifrado de extremo a extremo",
                    "obfuscación de código",
                    "verificación de integridad",
                    "firmado digital",
                    "protección contra reverse engineering"
                ];
                
                const protection = protections[Math.floor(Math.random() * protections.length)];
                
                this.addLog(`🔒 ${randomProject} protegido con ${protection}`, "info");
            }
            
            activateCounterMeasures() {
                const measures = [
                    "Honeypot activado - atacantes redirigidos",
                    "Contraataque DDoS iniciado",
                    "IP del atacante rastreada y bloqueada",
                    "Sistema de desinformación activado",
                    "Señuelos desplegados exitosamente"
                ];
                
                const measure = measures[Math.floor(Math.random() * measures.length)];
                this.addLog(`⚡ ${measure}`, "danger");
                
                // Activar contramedidas visuales
                const cards = ['honeypotCard', 'counterCard', 'traceCard'];
                const randomCard = cards[Math.floor(Math.random() * cards.length)];
                const cardElement = document.getElementById(randomCard);
                
                cardElement.classList.add('active');
                setTimeout(() => {
                    cardElement.classList.remove('active');
                }, 2000);
            }
            
            simulateAdvancedThreat() {
                const advancedThreats = [
                    "Ataque APT detectado - contramedidas avanzadas activadas",
                    "Amenaza persistente avanzada identificada",
                    "Zero-day exploit mitigado",
                    "Ataque de cadena de suministro prevenido",
                    "Inyección de modelo IA neutralizada"
                ];
                
                const threat = advancedThreats[Math.floor(Math.random() * advancedThreats.length)];
                this.addLog(`🎯 ${threat}`, "danger");
                
                this.threatLevel = Math.min(10, this.threatLevel + 2);
            }
            
            verifyAllProtocols() {
                Object.keys(this.protocols).forEach(protocol => {
                    if (!this.protocols[protocol]) {
                        this.protocols[protocol] = true;
                        this.addLog(`🔄 Protocolo ${protocol} restaurado automáticamente`, "success");
                    }
                });
            }
            
            adjustThreatLevel() {
                if (this.threatLevel > 1) {
                    this.threatLevel = Math.max(1, this.threatLevel - 0.5);
                }
                
                this.updateThreatDisplay();
            }
            
            updateThreatDisplay() {
                const threatIndicator = document.getElementById('threatIndicator');
                const threatLevelElement = document.getElementById('threatLevel');
                
                const position = (this.threatLevel / 10) * 100;
                threatIndicator.style.left = `calc(${position}% - 10px)`;
                
                if (this.threatLevel <= 3) {
                    threatLevelElement.textContent = "BAJO";
                    threatLevelElement.className = "status-value protocol-active";
                } else if (this.threatLevel <= 6) {
                    threatLevelElement.textContent = "MEDIO";
                    threatLevelElement.className = "status-value protocol-warning";
                } else {
                    threatLevelElement.textContent = "ALTO";
                    threatLevelElement.className = "status-value protocol-danger";
                }
            }
            
            updateUptime() {
                const uptime = 100 - (this.threatLevel * 0.5);
                document.getElementById('systemUptime').textContent = `${uptime.toFixed(1)}%`;
            }
            
            addLog(message, type = "info") {
                const timestamp = new Date().toLocaleTimeString();
                const logEntry = document.createElement('div');
                logEntry.className = 'log-entry';
                
                const iconClass = `icon-${type}`;
                const iconText = type === 'danger' ? '!' : type === 'warning' ? '⚠' : type === 'success' ? '✓' : 'i';
                
                logEntry.innerHTML = `
                    <div class="log-icon ${iconClass}">${iconText}</div>
                    <span class="timestamp">[${timestamp}]</span>
                    <span>${message}</span>
                `;
                
                const logContainer = document.getElementById('systemLog');
                logContainer.appendChild(logEntry);
                logContainer.scrollTop = logContainer.scrollHeight;
                
                if (logContainer.children.length > 50) {
                    logContainer.removeChild(logContainer.children[0]);
                }
                
                this.logEntries.push({timestamp, message, type});
            }
            
            updateDisplay() {
                document.getElementById('lastUpdate').textContent = new Date().toLocaleTimeString();
                document.getElementById('projectsProtected').textContent = this.projects.length;
            }
        }
        
        // Inicialización del sistema
        window.addEventListener('load', () => {
            // Iniciar efecto Matrix
            setInterval(drawMatrix, 50);
            
            // Iniciar sistema de defensa integral
            new IntegralDefenseSystem();
            
            // Protecciones adicionales
            document.addEventListener('contextmenu', (e) => {
                e.preventDefault();
                new IntegralDefenseSystem().addLog("🛡️ Intento de clic derecho bloqueado", "warning");
            });
            
            document.addEventListener('keydown', (e) => {
                if (e.ctrlKey && (e.key === 'u' || e.key === 'U')) {
                    e.preventDefault();
                    new IntegralDefenseSystem().addLog("🛡️ Intento de ver código fuente bloqueado", "warning");
                }
            });
            
            // Prevenir arrastrar
            document.addEventListener('dragstart', (e) => {
                e.preventDefault();
            });
        });
        
        window.addEventListener('resize', () => {
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;
        });
    </script>
</body>
</html>
